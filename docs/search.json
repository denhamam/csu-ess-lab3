[
  {
    "objectID": "csu-ess-lab3.html",
    "href": "csu-ess-lab3.html",
    "title": "Lab 3",
    "section": "",
    "text": "##librarys\nlibrary(zoo)\n\nWarning: package 'zoo' was built under R version 4.4.3\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\nlibrary(flextable)\nlibrary(tidyverse)\n\nWarning: package 'readr' was built under R version 4.4.3\n\n\nWarning: package 'stringr' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ purrr::compose() masks flextable::compose()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)"
  },
  {
    "objectID": "csu-ess-lab3.html#question-1",
    "href": "csu-ess-lab3.html#question-1",
    "title": "Lab 3",
    "section": "Question 1",
    "text": "Question 1\n\nlibrary(tidyverse); library(flextable)\ndata &lt;- read.csv(\"https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv\", header = TRUE)\nhead(data)\n\n        date    county      state  fips cases deaths\n1 2020-01-21 Snohomish Washington 53061     1      0\n2 2020-01-22 Snohomish Washington 53061     1      0\n3 2020-01-23 Snohomish Washington 53061     1      0\n4 2020-01-24      Cook   Illinois 17031     1      0\n5 2020-01-24 Snohomish Washington 53061     1      0\n6 2020-01-25    Orange California  6059     1      0"
  },
  {
    "objectID": "csu-ess-lab3.html#question-2",
    "href": "csu-ess-lab3.html#question-2",
    "title": "Lab 3",
    "section": "Question 2",
    "text": "Question 2\n\nmy.date &lt;- as.Date(\"2022-02-01\")\nmy.state &lt;- \"Colorado\"\nco_data &lt;- data %&gt;%\n  filter(state == my.state) %&gt;%\n  group_by(county) %&gt;%\n  arrange(county,date) %&gt;%\n  mutate(new_cases = cases - lag(cases, default = first(cases)), new_deaths = deaths - lag(deaths, default = first(deaths))) %&gt;%\n  ungroup()\nco_latest &lt;- co_data %&gt;%\n  filter(date == my.date)\n\ncummulative_cases &lt;- co_latest %&gt;%\n  arrange(desc(cases)) %&gt;%\n  select(county,cases) %&gt;%\n  head(5)\n\nnew_cases &lt;- co_latest %&gt;%\n  arrange(desc(new_cases)) %&gt;%\n  select(county, new_cases) %&gt;%\n  head(5)\n\nprint(cummulative_cases)\n\n# A tibble: 5 × 2\n  county     cases\n  &lt;chr&gt;      &lt;int&gt;\n1 El Paso   170673\n2 Denver    159022\n3 Arapahoe  144255\n4 Adams     126768\n5 Jefferson 113240\n\nprint(new_cases)\n\n# A tibble: 5 × 2\n  county    new_cases\n  &lt;chr&gt;         &lt;int&gt;\n1 El Paso         630\n2 Arapahoe        401\n3 Denver          389\n4 Adams           326\n5 Jefferson       291\n\n\n\nlibrary(readr)\ntemp_file &lt;- tempfile(fileext = \".csv\")\ndownload.file(\"https://www2.census.gov/programs-surveys/popest/datasets/2020-2023/counties/totals/co-est2023-alldata.csv\", \n              temp_file, mode = \"wb\")\npop_data &lt;- read_csv(temp_file)\n\nRows: 3195 Columns: 67\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): SUMLEV, STATE, COUNTY, STNAME, CTYNAME\ndbl (62): REGION, DIVISION, ESTIMATESBASE2020, POPESTIMATE2020, POPESTIMATE2...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nunlink(temp_file)\nhead(pop_data)\n\n# A tibble: 6 × 67\n  SUMLEV REGION DIVISION STATE COUNTY STNAME  CTYNAME        ESTIMATESBASE2020\n  &lt;chr&gt;   &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;   &lt;chr&gt;                      &lt;dbl&gt;\n1 040         3        6 01    000    Alabama Alabama                  5024294\n2 050         3        6 01    001    Alabama Autauga County             58809\n3 050         3        6 01    003    Alabama Baldwin County            231768\n4 050         3        6 01    005    Alabama Barbour County             25229\n5 050         3        6 01    007    Alabama Bibb County                22301\n6 050         3        6 01    009    Alabama Blount County              59130\n# ℹ 59 more variables: POPESTIMATE2020 &lt;dbl&gt;, POPESTIMATE2021 &lt;dbl&gt;,\n#   POPESTIMATE2022 &lt;dbl&gt;, POPESTIMATE2023 &lt;dbl&gt;, NPOPCHG2020 &lt;dbl&gt;,\n#   NPOPCHG2021 &lt;dbl&gt;, NPOPCHG2022 &lt;dbl&gt;, NPOPCHG2023 &lt;dbl&gt;, BIRTHS2020 &lt;dbl&gt;,\n#   BIRTHS2021 &lt;dbl&gt;, BIRTHS2022 &lt;dbl&gt;, BIRTHS2023 &lt;dbl&gt;, DEATHS2020 &lt;dbl&gt;,\n#   DEATHS2021 &lt;dbl&gt;, DEATHS2022 &lt;dbl&gt;, DEATHS2023 &lt;dbl&gt;, NATURALCHG2020 &lt;dbl&gt;,\n#   NATURALCHG2021 &lt;dbl&gt;, NATURALCHG2022 &lt;dbl&gt;, NATURALCHG2023 &lt;dbl&gt;,\n#   INTERNATIONALMIG2020 &lt;dbl&gt;, INTERNATIONALMIG2021 &lt;dbl&gt;, …"
  },
  {
    "objectID": "csu-ess-lab3.html#question-3",
    "href": "csu-ess-lab3.html#question-3",
    "title": "Lab 3",
    "section": "Question 3",
    "text": "Question 3\n\npop_url &lt;- 'https://www2.census.gov/programs-surveys/popest/datasets/2020-2023/counties/totals/co-est2023-alldata.csv'\npop_data &lt;- read.csv(pop_url, stringsAsFactors = FALSE)\ncolorado &lt;- read.csv(\"https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv\", header = TRUE)\npop_clean &lt;- pop_data %&gt;%\n  filter(\"COUNTY\" != \"000\") %&gt;%\n  mutate(fips = sprintf(\"%05s\", as.numeric(paste0(STATE, COUNTY))))\ncolorado &lt;- colorado %&gt;%\n  mutate(fips = as.character(fips))\npop_joined &lt;- pop_clean %&gt;%\n  right_join(colorado, by = \"fips\") %&gt;%\n  select(fips, date, cases, deaths, contains(\"NAME\"), contains(\"2021\")) %&gt;%\n  group_by(fips) %&gt;%\n  arrange(fips, date) %&gt;%\n  mutate(new_cases = cases - lag(cases), new_deaths = deaths - lag(deaths)) %&gt;%\n  ungroup()\nprint(pop_joined, 5)\n\n# A\n#   tibble:\n#   2,502,832\n#   ×\n#   24\n# ℹ 2,502,822\n#   more\n#   rows\n# ℹ 24\n#   more\n#   variables:\n#   fips &lt;chr&gt;, …\n\n\n\npercap &lt;- pop_joined %&gt;%\n  filter(date == my.date) %&gt;%\n  mutate(per_cap_cases = cases / POPESTIMATE2021, per_cap_new = new_cases / POPESTIMATE2021, per_cap_deaths = deaths / POPESTIMATE2021)\nprint(percap)\n\n# A tibble: 3,252 × 27\n   fips  date        cases deaths STNAME CTYNAME POPESTIMATE2021 NPOPCHG2021\n   &lt;chr&gt; &lt;chr&gt;       &lt;int&gt;  &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;             &lt;int&gt;       &lt;int&gt;\n 1 10001 2022-02-01  47771    558 &lt;NA&gt;   &lt;NA&gt;                 NA          NA\n 2 10003 2022-02-01 141029   1229 &lt;NA&gt;   &lt;NA&gt;                 NA          NA\n 3 10005 2022-02-01  58760    757 &lt;NA&gt;   &lt;NA&gt;                 NA          NA\n 4 1001  2022-02-01  14782    167 &lt;NA&gt;   &lt;NA&gt;                 NA          NA\n 5 1003  2022-02-01  52881    614 &lt;NA&gt;   &lt;NA&gt;                 NA          NA\n 6 1005  2022-02-01   5276     84 &lt;NA&gt;   &lt;NA&gt;                 NA          NA\n 7 1007  2022-02-01   6130     96 &lt;NA&gt;   &lt;NA&gt;                 NA          NA\n 8 1009  2022-02-01  14096    207 &lt;NA&gt;   &lt;NA&gt;                 NA          NA\n 9 1011  2022-02-01   2242     47 &lt;NA&gt;   &lt;NA&gt;                 NA          NA\n10 1013  2022-02-01   4806    108 &lt;NA&gt;   &lt;NA&gt;                 NA          NA\n# ℹ 3,242 more rows\n# ℹ 19 more variables: BIRTHS2021 &lt;int&gt;, DEATHS2021 &lt;int&gt;,\n#   NATURALCHG2021 &lt;int&gt;, INTERNATIONALMIG2021 &lt;int&gt;, DOMESTICMIG2021 &lt;int&gt;,\n#   NETMIG2021 &lt;int&gt;, RESIDUAL2021 &lt;int&gt;, GQESTIMATES2021 &lt;int&gt;,\n#   RBIRTH2021 &lt;dbl&gt;, RDEATH2021 &lt;dbl&gt;, RNATURALCHG2021 &lt;dbl&gt;,\n#   RINTERNATIONALMIG2021 &lt;dbl&gt;, RDOMESTICMIG2021 &lt;dbl&gt;, RNETMIG2021 &lt;dbl&gt;,\n#   new_cases &lt;int&gt;, new_deaths &lt;int&gt;, per_cap_cases &lt;dbl&gt;, …\n\n\n\nlibrary(flextable)\npercap %&gt;%\n  slice_max(per_cap_cases, n = 5) %&gt;%\n  select(CTYNAME, per_cap_cases) %&gt;%\n  flextable() %&gt;%\n  flextable::set_caption(\"Counties with Most Cumulative Covid Cases Per Capita\")\n\nCTYNAMEper_cap_casesLoving County2.3148148Dimmit County0.6249558Jim Hogg County0.4386221Uvalde County0.4087006Stewart County0.4048830\n\n\n\nlibrary(flextable)\npercap %&gt;%\n  slice_max(per_cap_new, n = 5) %&gt;%\n  select(CTYNAME, per_cap_new) %&gt;%\n  flextable() %&gt;%\n  flextable::set_caption(\"Counties with Most New Covid Cases Per Capita\")\n\nCTYNAMEper_cap_newLoving County0.111111111Jim Hogg County0.009603340Oglala Lakota County0.008333948Knox County0.006527893Starr County0.006028121"
  },
  {
    "objectID": "csu-ess-lab3.html#question-4",
    "href": "csu-ess-lab3.html#question-4",
    "title": "Lab 3",
    "section": "Question 4",
    "text": "Question 4\n\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(stringr)\n\ndata$fips &lt;- as.character(data$fips)\npop_clean$fips &lt;- as.character(pop_clean$fips)\n\ncovid_with_pop &lt;- left_join(data, pop_clean, by = \"fips\")\n\npop_clean &lt;- pop_clean %&gt;%\n  mutate(\n    STATE_FIP = str_pad(as.character(STATE), 2, pad = \"0\"),\n    COUNTY_FIP = str_pad(as.character(COUNTY), 3, pad = \"0\"),\n    FIP = paste0(STATE_FIP, COUNTY_FIP)\n  ) %&gt;%\n  distinct(FIP, .keep_all = TRUE)\n\ncombined_data &lt;- left_join(data, pop_clean)\n\nJoining with `by = join_by(fips)`\n\ncombined_data &lt;- combined_data %&gt;%\n  mutate(date = as.Date(date)) \n\nmax_date &lt;- max(combined_data$date, na.rm = TRUE)\n\ncombined_data &lt;- combined_data %&gt;%\n  arrange(county, date) %&gt;% \n  mutate(\n    new_cases = cases - lag(cases, default = first(cases)),\n    new_deaths = deaths - lag(deaths, default = first(deaths))\n  )\n\nlast_14_days_data &lt;- combined_data %&gt;%\n  filter(date &gt;= (max_date - 14))\n\nnew_cases_per_100k &lt;- last_14_days_data %&gt;%\n  group_by(county) %&gt;%\n  summarize(\n    total_new_cases = sum(new_cases, na.rm = TRUE), \n    population = first(POPESTIMATE2021),\n    new_cases_per_100k = (total_new_cases / population) * 100000\n  ) %&gt;%\n  arrange(desc(new_cases_per_100k))\n\n\ntop_5_new_cases &lt;- head(new_cases_per_100k, 5)\nprint(top_5_new_cases)\n\n# A tibble: 5 × 4\n  county   total_new_cases population new_cases_per_100k\n  &lt;chr&gt;              &lt;int&gt;      &lt;int&gt;              &lt;dbl&gt;\n1 King               17048        256           6659375 \n2 Lane                1527       1561             97822.\n3 Harris              8414      35589             23642.\n4 Thurston            1393       6633             21001.\n5 Loving                10         54             18519.\n\nwatch_list_counties &lt;- new_cases_per_100k %&gt;%\n  filter(new_cases_per_100k &gt; 100)\n\nprint(nrow(watch_list_counties))\n\n[1] 350\n\nprint(watch_list_counties)\n\n# A tibble: 350 × 4\n   county   total_new_cases population new_cases_per_100k\n   &lt;chr&gt;              &lt;int&gt;      &lt;int&gt;              &lt;dbl&gt;\n 1 King               17048        256           6659375 \n 2 Lane                1527       1561             97822.\n 3 Harris              8414      35589             23642.\n 4 Thurston            1393       6633             21001.\n 5 Loving                10         54             18519.\n 6 Lucas               1446       8706             16609.\n 7 Stafford             625       4008             15594.\n 8 Stark                657       5284             12434.\n 9 Plymouth            2478      25731              9630.\n10 Rock                 868       9685              8962.\n# ℹ 340 more rows"
  },
  {
    "objectID": "csu-ess-lab3.html#counties-meet-the-watch-list-conditions",
    "href": "csu-ess-lab3.html#counties-meet-the-watch-list-conditions",
    "title": "Lab 3",
    "section": "350 counties meet the watch list conditions",
    "text": "350 counties meet the watch list conditions"
  },
  {
    "objectID": "csu-ess-lab3.html#question-5",
    "href": "csu-ess-lab3.html#question-5",
    "title": "Lab 3",
    "section": "Question 5",
    "text": "Question 5\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\n\ncovid_deaths_vector &lt;- c(400, 20, 500, 10, 5, 6, 300, 25, 15, 5, 10, 10, 8, 12, 5, 80, 300, 6, 180, 20, 200, 15, 70, 20, 5, 10, 10, 1, 50, 2, 100, 4, 5, 100, 5, 200, 15, 10, 3, 25, 1, 5, 10, 30, 6, 12, 8, 7, 20, 15, 8, 10, 5, 15, 7, 3, 1, 10, 8)\n\nfull_covid_deaths &lt;- c(covid_deaths_vector, rep(0, 64 - length(covid_deaths_vector)))\n\ncounty_deaths &lt;- data.frame(\n  county_name = c(\"Adams\", \"Alamosa\", \"Arapahoe\", \"Archuleta\", \"Baca\", \"Bent\", \"Boulder\", \"Broomfield\", \"Chaffee\", \"Cheyenne\", \"Clear Creek\", \"Conejos\", \"Costilla\", \"Crowley\", \"Custer\", \"Delta\", \"Denver\", \"Dolores\", \"Douglas\", \"Eagle\", \"El Paso\", \"Elbert\", \"Fremont\", \"Garfield\", \"Gilpin\", \"Grand\", \"Gunnison\", \"Hinsdale\", \"Huerfano\", \"Jackson\", \"Jefferson\", \"Kiowa\", \"Kit Carson\", \"La Plata\", \"Lake\", \"Larimer\", \"Las Animas\", \"Lincoln\", \"Logan\", \"Mesa\", \"Mineral\", \"Moffat\", \"Montezuma\", \"Montrose\", \"Morgan\", \"Otero\", \"Ouray\", \"Park\", \"Phillips\", \"Pitkin\", \"Prowers\", \"Pueblo\", \"Rio Blanco\", \"Rio Grande\", \"Routt\", \"Saguache\", \"San Juan\", \"San Miguel\", \"Sedgwick\", \"Summit\", \"Teller\", \"Washington\", \"Weld\", \"Yuma\"),\n  total_deaths_2021 = c(4104, 191, 4960, 137, 78, 87, 2167, 437, 169, 25, 71, 146, 54, 67, 60, 509, 5187, 46, 1998, 188, 6057, 222, 759, 431, 42, 102, 91, 4, 140, 14, 5302, 20, 104, 450, 58, 2815, 236, 66, 275, 2033, 8, 157, 373, 620, 327, 314, 36, 125, 69, 73, 181, 2501, 73, 174, 135, 70, 6, 34, 34, 87, 285, 68, 2528, 102),\n  covid_deaths = full_covid_deaths\n)\n\ncounty_deaths &lt;- county_deaths %&gt;%\n  mutate(\n    percentage_covid_deaths = (covid_deaths / total_deaths_2021) * 100\n  )\n\nprint(\"Problem counties after correction:\")\n\n[1] \"Problem counties after correction:\"\n\nprint(county_deaths[county_deaths$county_name %in% c(\"Kiowa\", \"Mineral\"), ])\n\n   county_name total_deaths_2021 covid_deaths percentage_covid_deaths\n32       Kiowa                20            4                    20.0\n41     Mineral                 8            1                    12.5\n\nhigh_covid_deaths &lt;- county_deaths %&gt;%\n  filter(percentage_covid_deaths &gt;= 20)\n\nprint(\"Counties with ≥20% COVID deaths:\")\n\n[1] \"Counties with ≥20% COVID deaths:\"\n\nprint(high_covid_deaths[high_covid_deaths$county_name %in% c(\"Kiowa\", \"Mineral\"), ])\n\n  county_name total_deaths_2021 covid_deaths percentage_covid_deaths\n4       Kiowa                20            4                      20\n\nggplot(high_covid_deaths, aes(x = reorder(county_name, -percentage_covid_deaths), y = percentage_covid_deaths)) +\n  geom_bar(stat = \"identity\", fill = \"green\") +\n  coord_flip() +\n  labs(\n    title = \"Counties with COVID Deaths ≥20% of Annual Death Toll (2021)\",\n    x = \"County\",\n    y = \"Percentage of COVID Deaths (%)\") +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 10),\n    plot.title = element_text(size = 12, face = \"bold\")\n  ) +\n  geom_text(aes(label = sprintf(\"%.1f%%\", percentage_covid_deaths)), \n            hjust = -0.1,\n            size = 3.5)"
  },
  {
    "objectID": "csu-ess-lab3.html#question-6",
    "href": "csu-ess-lab3.html#question-6",
    "title": "Lab 3",
    "section": "Question 6",
    "text": "Question 6\n\nstate_pop_data &lt;- tibble(\n    state = c(\"Alabama\", \"Colorado\", \"New York\", \"Ohio\"),\n    population = c(5024279, 5773714, 19453561, 11689100)\n)\nstate_covid_per_capita &lt;- data %&gt;%\n    filter(state %in% c(\"Alabama\", \"Colorado\", \"New York\", \"Ohio\")) %&gt;%\n    left_join(state_pop_data, by = \"state\") %&gt;%\n    group_by(state, date, population) %&gt;%\n    summarise(daily_cases = sum(cases, na.rm = TRUE), .groups = 'drop') %&gt;%\n    group_by(state) %&gt;%\n    mutate(\n        daily_new_cases = daily_cases - lag(daily_cases),\n        new_cases_per_100k = (daily_new_cases / population) * 100000,\n        rolling_avg_per_100k = zoo::rollmean(new_cases_per_100k, k = 7, fill = NA, align = \"right\")\n    ) %&gt;%\n    ungroup()\n\n\nif (!exists(\"state_covid_per_capita\")) {\n    stop(\"The dataset state_covid_per_capita is not available!\")\n}\n\nstr(state_covid_per_capita)\n\ntibble [3,192 × 7] (S3: tbl_df/tbl/data.frame)\n $ state               : chr [1:3192] \"Alabama\" \"Alabama\" \"Alabama\" \"Alabama\" ...\n $ date                : chr [1:3192] \"2020-03-13\" \"2020-03-14\" \"2020-03-15\" \"2020-03-16\" ...\n $ population          : num [1:3192] 5024279 5024279 5024279 5024279 5024279 ...\n $ daily_cases         : int [1:3192] 6 12 23 29 39 51 78 106 131 157 ...\n $ daily_new_cases     : int [1:3192] NA 6 11 6 10 12 27 28 25 26 ...\n $ new_cases_per_100k  : num [1:3192] NA 0.119 0.219 0.119 0.199 ...\n $ rolling_avg_per_100k: num [1:3192] NA NA NA NA NA ...\n\nhead(state_covid_per_capita)\n\n# A tibble: 6 × 7\n  state   date       population daily_cases daily_new_cases new_cases_per_100k\n  &lt;chr&gt;   &lt;chr&gt;           &lt;dbl&gt;       &lt;int&gt;           &lt;int&gt;              &lt;dbl&gt;\n1 Alabama 2020-03-13    5024279           6              NA             NA    \n2 Alabama 2020-03-14    5024279          12               6              0.119\n3 Alabama 2020-03-15    5024279          23              11              0.219\n4 Alabama 2020-03-16    5024279          29               6              0.119\n5 Alabama 2020-03-17    5024279          39              10              0.199\n6 Alabama 2020-03-18    5024279          51              12              0.239\n# ℹ 1 more variable: rolling_avg_per_100k &lt;dbl&gt;\n\nsum(is.na(state_covid_per_capita$rolling_avg_per_100k))\n\n[1] 28\n\nutils::head(state_covid_per_capita)\n\n# A tibble: 6 × 7\n  state   date       population daily_cases daily_new_cases new_cases_per_100k\n  &lt;chr&gt;   &lt;chr&gt;           &lt;dbl&gt;       &lt;int&gt;           &lt;int&gt;              &lt;dbl&gt;\n1 Alabama 2020-03-13    5024279           6              NA             NA    \n2 Alabama 2020-03-14    5024279          12               6              0.119\n3 Alabama 2020-03-15    5024279          23              11              0.219\n4 Alabama 2020-03-16    5024279          29               6              0.119\n5 Alabama 2020-03-17    5024279          39              10              0.199\n6 Alabama 2020-03-18    5024279          51              12              0.239\n# ℹ 1 more variable: rolling_avg_per_100k &lt;dbl&gt;\n\nstr(state_covid_per_capita)\n\ntibble [3,192 × 7] (S3: tbl_df/tbl/data.frame)\n $ state               : chr [1:3192] \"Alabama\" \"Alabama\" \"Alabama\" \"Alabama\" ...\n $ date                : chr [1:3192] \"2020-03-13\" \"2020-03-14\" \"2020-03-15\" \"2020-03-16\" ...\n $ population          : num [1:3192] 5024279 5024279 5024279 5024279 5024279 ...\n $ daily_cases         : int [1:3192] 6 12 23 29 39 51 78 106 131 157 ...\n $ daily_new_cases     : int [1:3192] NA 6 11 6 10 12 27 28 25 26 ...\n $ new_cases_per_100k  : num [1:3192] NA 0.119 0.219 0.119 0.199 ...\n $ rolling_avg_per_100k: num [1:3192] NA NA NA NA NA ...\n\nstate_covid_per_capita$date &lt;- as.Date(state_covid_per_capita$date)\n\nstate_covid_per_capita$state &lt;- factor(state_covid_per_capita$state)\n\nstate_covid_per_capita %&gt;%\n    group_by(state) %&gt;%\n    summarise(count = n())\n\n# A tibble: 4 × 2\n  state    count\n  &lt;fct&gt;    &lt;int&gt;\n1 Alabama    792\n2 Colorado   800\n3 New York   804\n4 Ohio       796\n\nggplot(state_covid_per_capita, aes(x = date, y = daily_new_cases, color = state)) +\n    geom_line(linewidth = 1) +\n    labs(\n        title = \"Daily New COVID-19 Cases\",\n        subtitle = \"Comparing Four States: New York, Colorado, Alabama, Ohio\",\n        x = \"Date\",\n        y = \"Daily New Cases\",\n        color = \"State\"\n    ) +\n    theme_minimal()\n\nWarning: Removed 4 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\nstate_covid_per_capita &lt;- state_covid_per_capita %&gt;%\n    group_by(state) %&gt;%\n    mutate(\n        daily_new_cases = daily_cases - lag(daily_cases, default = first(daily_cases)),\n        new_cases_per_100k = (daily_new_cases / population) * 100000,\n        rolling_avg_per_100k = zoo::rollmean(new_cases_per_100k, k = 7, fill = NA, align = \"right\")\n    ) %&gt;%\n    ungroup()"
  },
  {
    "objectID": "csu-ess-lab3.html#scaling-the-population-impacts-the-anaylsis-because-it-helps-states-with-different-sizes-seem-more-equal.-for-example-big-states-like-california-would-just-naturally-have-more-cases-than-a-small-state-like-ohio.-by-adjusting-for-population-the-analysis-centers-on-the-rate-of-infection-instead-of-number-of-cases.",
    "href": "csu-ess-lab3.html#scaling-the-population-impacts-the-anaylsis-because-it-helps-states-with-different-sizes-seem-more-equal.-for-example-big-states-like-california-would-just-naturally-have-more-cases-than-a-small-state-like-ohio.-by-adjusting-for-population-the-analysis-centers-on-the-rate-of-infection-instead-of-number-of-cases.",
    "title": "Lab 3",
    "section": "Scaling the population impacts the anaylsis because it helps states with different sizes seem more equal. For example, big states like California would just naturally have more cases than a small state like Ohio. By adjusting for population, the analysis centers on the rate of infection instead of number of cases.",
    "text": "Scaling the population impacts the anaylsis because it helps states with different sizes seem more equal. For example, big states like California would just naturally have more cases than a small state like Ohio. By adjusting for population, the analysis centers on the rate of infection instead of number of cases."
  },
  {
    "objectID": "csu-ess-lab3.html#question-7",
    "href": "csu-ess-lab3.html#question-7",
    "title": "Lab 3",
    "section": "Question 7",
    "text": "Question 7\n\nlibrary(tidyverse)\nlibrary(USAboundaries)\nlibrary(USAboundariesData)\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\n\nThe following objects are masked from 'package:lubridate':\n\n    hour, isoweek, mday, minute, month, quarter, second, wday, week,\n    yday, year\n\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\n\nThe following objects are masked from 'package:zoo':\n\n    yearmon, yearqtr\n\ncounties &lt;- USAboundaries::us_counties() %&gt;%\n  dplyr::select(fips = geoid) %&gt;%\n  sf::st_centroid() %&gt;%\n  dplyr::mutate(LON = sf::st_coordinates(.)[, 1], LAT = sf::st_coordinates(.)[, 2]) %&gt;%\n  sf::st_drop_geometry()\n\nWarning: st_centroid assumes attributes are constant over geometries\n\ndir.create(\"../resources\", recursive = TRUE)\n\nWarning in dir.create(\"../resources\", recursive = TRUE): '..\\resources' already\nexists\n\nwrite.csv(counties, \"../resources/county-centroids.csv\", row.names = FALSE)\n\ncounty_centroids &lt;- read_csv('https://raw.githubusercontent.com/mikejohnson51/csu-ess-330/refs/heads/main/resources/county-centroids.csv')\n\nRows: 3221 Columns: 3\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): fips\ndbl (2): LON, LAT\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncounty_centroids &lt;- as.data.table(county_centroids)\n\ndata &lt;- as.data.table(data)\n\ndata[, fips := as.character(fips)]\n\ncovid_with_centroids &lt;- merge(data, county_centroids, by = \"fips\", all.x = TRUE)\n\ncovid_with_centroids[, date := as.Date(date, format = \"%Y-%m-%d\")]\n\ncovid_wmc &lt;- covid_with_centroids[, .(\n  total_cases = sum(cases, na.rm = TRUE),\n  weighted_lon = sum(LON * cases, na.rm = TRUE) / sum(cases, na.rm = TRUE),\n  weighted_lat = sum(LAT * cases, na.rm = TRUE) / sum(cases, na.rm = TRUE),\n  month = format(date, \"%m\")\n), by = date]\n\nggplot(covid_wmc, aes(x = weighted_lon, y = weighted_lat, color = month, size = total_cases)) +\n  borders(\"state\", fill = \"gray90\", colour = \"white\") +\n  geom_point(alpha = 0.8) +\n  scale_color_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  labs(\n    title = \"Weighted Mean Center of COVID-19 Cases Over Time\",\n    x = \"Longitude\",\n    y = \"Latitude\",\n    color = \"Month\",\n    size = \"Total Cases\"\n  )"
  },
  {
    "objectID": "csu-ess-lab3.html#question-8",
    "href": "csu-ess-lab3.html#question-8",
    "title": "Lab 3",
    "section": "Question 8",
    "text": "Question 8\n\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(patchwork)\n\nWarning: package 'patchwork' was built under R version 4.4.3\n\ncovid_with_centroids[, deaths := as.numeric(deaths)]\n\ncovid_wmc_deaths &lt;- covid_with_centroids[, .(\n  total_deaths = sum(deaths, na.rm = TRUE),\n  weighted_lon_deaths = sum(LON * deaths, na.rm = TRUE) / sum(deaths, na.rm = TRUE),\n  weighted_lat_deaths = sum(LAT * deaths, na.rm = TRUE) / sum(deaths, na.rm = TRUE),\n  month = format(date, \"%m\")\n), by = date]\n\nplot_cases &lt;- ggplot(covid_wmc, aes(x = weighted_lon, y = weighted_lat, color = month, size = total_cases)) +\n  borders(\"state\", fill = \"gray90\", colour = \"white\") +\n  geom_point(alpha = 0.5) +\n  scale_color_viridis_d(option = \"plasma\") +\n  theme_minimal() +\n  labs(\n    title = \"Weighted Mean Center of COVID-19 Cases Over Time\",\n    x = \"Longitude\",\n    y = \"Latitude\",\n    color = \"Month\",\n    size = \"Total Cases\"\n  ) +\n  scale_size_continuous(range = c(0, 10)) +\n  theme(legend.position = \"bottom\")\n\nplot_deaths &lt;- ggplot(covid_wmc_deaths, aes(x = weighted_lon_deaths, y = weighted_lat_deaths, color = month, size = total_deaths)) +\n  borders(\"state\", fill = \"gray90\", colour = \"white\") +\n  geom_point(alpha = 0.5) +\n  scale_color_viridis_d(option = \"magma\") +\n  theme_minimal() +\n  labs(\n    title = \"Weighted Mean Center of COVID-19 Deaths Over Time\",\n    x = \"Longitude\",\n    y = \"Latitude\",\n    color = \"Month\",\n    size = \"Total Deaths\"\n  ) +\n  scale_size_continuous(range = c(0, 10)) +\n  theme(legend.position = \"bottom\")\nplot_cases | plot_deaths\n\nWarning: Removed 39 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  }
]